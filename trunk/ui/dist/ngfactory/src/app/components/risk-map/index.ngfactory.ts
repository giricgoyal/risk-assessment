/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */


import * as import0 from '@angular/core';
import * as import1 from '../../../../../../src/app/components/risk-map/index';
import * as import2 from '@angular/common';
import * as import3 from '@angular/forms';
import * as import4 from '@angular/http';
import * as import5 from '@angular/router';
import * as import6 from '../../../../../../src/app/shared/module';
import * as import7 from '../../../../../../src/app/components/sidebar/index';
import * as import8 from '@asymmetrik/angular2-leaflet/dist/leaflet/leaflet.module';
import * as import9 from './component.ngfactory';
import * as import10 from '../../../../../../src/app/components/risk-map/component';
class RiskMapModuleInjector extends import0.ɵNgModuleInjector<import1.RiskMapModule> {
  _CommonModule_0:import2.CommonModule;
  _ɵba_1:import3.ɵba;
  _FormsModule_2:import3.FormsModule;
  _HttpModule_3:import4.HttpModule;
  _RouterModule_4:import5.RouterModule;
  _SharedModule_5:import6.SharedModule;
  _AppSidebarModule_6:import7.AppSidebarModule;
  _LeafletModule_7:import8.LeafletModule;
  _RiskMapModule_8:import1.RiskMapModule;
  __NgLocalization_9:import2.NgLocaleLocalization;
  __ɵi_10:import3.ɵi;
  __BrowserXhr_11:import4.BrowserXhr;
  __ResponseOptions_12:import4.BaseResponseOptions;
  __XSRFStrategy_13:any;
  __XHRBackend_14:import4.XHRBackend;
  __RequestOptions_15:import4.BaseRequestOptions;
  __Http_16:any;
  _ROUTES_17:any[];
  constructor(parent:import0.Injector) {
    super(parent,[import9.RiskMapComponentNgFactory],([] as any[]));
  }
  get _NgLocalization_9():import2.NgLocaleLocalization {
    if ((this.__NgLocalization_9 == null)) { (this.__NgLocalization_9 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID))); }
    return this.__NgLocalization_9;
  }
  get _ɵi_10():import3.ɵi {
    if ((this.__ɵi_10 == null)) { (this.__ɵi_10 = new import3.ɵi()); }
    return this.__ɵi_10;
  }
  get _BrowserXhr_11():import4.BrowserXhr {
    if ((this.__BrowserXhr_11 == null)) { (this.__BrowserXhr_11 = new import4.BrowserXhr()); }
    return this.__BrowserXhr_11;
  }
  get _ResponseOptions_12():import4.BaseResponseOptions {
    if ((this.__ResponseOptions_12 == null)) { (this.__ResponseOptions_12 = new import4.BaseResponseOptions()); }
    return this.__ResponseOptions_12;
  }
  get _XSRFStrategy_13():any {
    if ((this.__XSRFStrategy_13 == null)) { (this.__XSRFStrategy_13 = import4.ɵb()); }
    return this.__XSRFStrategy_13;
  }
  get _XHRBackend_14():import4.XHRBackend {
    if ((this.__XHRBackend_14 == null)) { (this.__XHRBackend_14 = new import4.XHRBackend(this._BrowserXhr_11,this._ResponseOptions_12,this._XSRFStrategy_13)); }
    return this.__XHRBackend_14;
  }
  get _RequestOptions_15():import4.BaseRequestOptions {
    if ((this.__RequestOptions_15 == null)) { (this.__RequestOptions_15 = new import4.BaseRequestOptions()); }
    return this.__RequestOptions_15;
  }
  get _Http_16():any {
    if ((this.__Http_16 == null)) { (this.__Http_16 = import4.ɵc(this._XHRBackend_14,this._RequestOptions_15)); }
    return this.__Http_16;
  }
  createInternal():import1.RiskMapModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._ɵba_1 = new import3.ɵba();
    this._FormsModule_2 = new import3.FormsModule();
    this._HttpModule_3 = new import4.HttpModule();
    this._RouterModule_4 = new import5.RouterModule(this.parent.get(import5.ɵa,(null as any)),this.parent.get(import5.Router,(null as any)));
    this._SharedModule_5 = new import6.SharedModule();
    this._AppSidebarModule_6 = new import7.AppSidebarModule();
    this._LeafletModule_7 = new import8.LeafletModule();
    this._RiskMapModule_8 = new import1.RiskMapModule();
        this._ROUTES_17 = [[{
          path: '',
          component: import10.RiskMapComponent
        }
    ]];
    return this._RiskMapModule_8;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.ɵba)) { return this._ɵba_1; }
    if ((token === import3.FormsModule)) { return this._FormsModule_2; }
    if ((token === import4.HttpModule)) { return this._HttpModule_3; }
    if ((token === import5.RouterModule)) { return this._RouterModule_4; }
    if ((token === import6.SharedModule)) { return this._SharedModule_5; }
    if ((token === import7.AppSidebarModule)) { return this._AppSidebarModule_6; }
    if ((token === import8.LeafletModule)) { return this._LeafletModule_7; }
    if ((token === import1.RiskMapModule)) { return this._RiskMapModule_8; }
    if ((token === import2.NgLocalization)) { return this._NgLocalization_9; }
    if ((token === import3.ɵi)) { return this._ɵi_10; }
    if ((token === import4.BrowserXhr)) { return this._BrowserXhr_11; }
    if ((token === import4.ResponseOptions)) { return this._ResponseOptions_12; }
    if ((token === import4.XSRFStrategy)) { return this._XSRFStrategy_13; }
    if ((token === import4.XHRBackend)) { return this._XHRBackend_14; }
    if ((token === import4.RequestOptions)) { return this._RequestOptions_15; }
    if ((token === import4.Http)) { return this._Http_16; }
    if ((token === import5.ROUTES)) { return this._ROUTES_17; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const RiskMapModuleNgFactory:import0.NgModuleFactory<import1.RiskMapModule> = new import0.NgModuleFactory<any>(RiskMapModuleInjector,import1.RiskMapModule);
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL2dpcmljL1Byb2plY3RzL3Jpc2stYXNzZXNzbWVudC90cnVuay91aS9zcmMvYXBwL2NvbXBvbmVudHMvcmlzay1tYXAvaW5kZXgubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvZ2lyaWMvUHJvamVjdHMvcmlzay1hc3Nlc3NtZW50L3RydW5rL3VpL3NyYy9hcHAvY29tcG9uZW50cy9yaXNrLW1hcC9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIgIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
